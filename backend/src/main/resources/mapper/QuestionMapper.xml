<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joyfully.springboot.mapper.QuestionMapper">
    <resultMap id="questionMap" type="com.joyfully.springboot.entity.Question">
        <result property="id" column="q_id"/>
        <result property="issue" column="q_issue"/>
        <result property="type" column="q_type"/>
        <result property="share" column="q_share"/>
        <result property="userId" column="q_user_id"/>
        <result property="praiseCount" column="q_praise"/>
        <result property="belittleCount" column="q_belittle"/>
        <result property="attentionCount" column="q_attention"/>
        <association property="questionerInfo" javaType="com.joyfully.springboot.controller.dto.QuestionerInfo">
            <result property="userId" column="q_user_id"/>
            <result property="avatar" column="q_u_avatar"/>
            <result property="nickname" column="q_u_nickname"/>
            <result property="introduction" column="q_u_introduction"/>
            <result property="answerCount" column="q_u_answer_count"/>
            <result property="questionCount" column="q_u_question_count"/>
        </association>
        <collection property="answerList" javaType="ArrayList" ofType="com.joyfully.springboot.controller.dto.AnswerInfo">
            <result column="q_id" property="questionId"/>
            <result column="a_user_id" property="userId"/>
            <result column="a_user_nickname" property="userNickname"/>
            <result column="a_content" property="content"/>
            <result column="a_praise" property="praiseCount"/>
            <result column="a_belittle" property="belittleCount"/>
        </collection>
        <collection property="categoryList" javaType="ArrayList" ofType="com.joyfully.springboot.entity.Category">
            <result column="c_id" property="id"/>
            <result column="c_name" property="name"/>
        </collection>
    </resultMap>

    <select id="queryAll" resultMap="questionMap">
        select q.id q_id, q.issue q_issue, q.type q_type, q.share q_share, q.user_id q_user_id, q.praise_count q_praise, q.belittle_count q_belittle, q.attention_count q_attention,
                a.content a_content, a.praise_count a_praise, a.belittle_count a_belittle, a.user_id a_user_id,
                c.id c_id, c.name c_name,
                nickname a_user_nickname
        from question q
                left join question_category qc on q.id = qc.question_id
                left join category c on qc.category_id = c.id
                left join answer a on q.id = a.question_id
                left join user u on u.id = a.user_id
        <where>
            <if test="questionIdList != null">
                q.id in
                    <foreach collection="questionIdList" open="(" separator="," close=")" item="item">
                        #{item}
                    </foreach>
            </if>
            <if test="search != null and search != ''">
                and c.name like '#{search}%'
            </if>
        </where>
        order by q.id
    </select>

    <select id="queryRandomLimit" resultType="com.joyfully.springboot.entity.Question">
        SELECT q1.*,
               `answer`.`content` content,
               `answer`.`user_id` user_id
        FROM `question` AS q1
                 left join `answer` on `answer`.question_id = q1.id
                 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `question`) - (SELECT MIN(id) FROM `question`)) +
                                    (SELECT MIN(id) FROM `question`)) AS id) AS q2
        WHERE q1.id >= q2.id
          and q1.share = 1
        ORDER BY q1.id
        LIMIT #{limit};
    </select>

    <select id="queryByPraise" resultMap="questionMap">
        select q.id q_id, q.issue q_issue, q.type q_type, q.share q_share, q.user_id q_user_id, q.praise_count q_praise, q.belittle_count q_belittle, q.attention_count q_attention,
               a.content a_content, a.praise_count a_praise, a.belittle_count a_belittle, a.user_id a_user_id,
               c.id c_id, c.name c_name,
               u.nickname a_user_nickname,
               q_u.nickname q_u_nickname, q_u.introduction q_u_introduction, q_u.avatar q_u_avatar,
               (select count(*) from answer a2 where q_u.id = a2.user_id) q_u_answer_count,
               (select count(*) from question q2 where q_u.id = q2.user_id) q_u_question_count
        from question q
                left join question_category qc on q.id = qc.question_id
                left join category c on qc.category_id = c.id
                left join answer a on q.id = a.question_id
                left join user u on u.id = a.user_id
                left join user q_u on q_u.id = q.user_id
        ORDER BY q.praise_count desc

        LIMIT #{limit}
    </select>


</mapper>